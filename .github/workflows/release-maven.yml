# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Create Maven and Docker Release

on:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"

jobs:
  create-release:

    runs-on: ubuntu-latest

    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build and package
        run: mvn clean package -DskipTests=true

      - name: Extract version from tag
        id: extract_version
        run: |
          VERSION=${GITHUB_REF##*/}
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Extracted version: $VERSION"

      - name: Find built JAR
        id: find_jar
        run: |
          JAR_PATH=$(find target -type f -name "*.jar" | grep -v 'original-' | head -n 1)
          echo "JAR_PATH=$JAR_PATH" >> $GITHUB_ENV
          echo "Found JAR: $JAR_PATH"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.VERSION }}
          name: Release ${{ env.VERSION }}
          draft: false
          prerelease: false
          files: ${{ env.JAR_PATH }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract image name
        id: extract_imagename
        run: |
          raw_repo="${{ github.repository }}"
          NORMALIZED=$(echo "$raw_repo" | tr '[:upper:]' '[:lower:]' | tr '.' '-')
          echo "REPOSITORY_NORMALIZED=$NORMALIZED" >> $GITHUB_ENV
          echo "Extracted image name: $NORMALIZED"

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ env.REPOSITORY_NORMALIZED }}:latest
            ghcr.io/${{ env.REPOSITORY_NORMALIZED }}:${{ env.VERSION }}
